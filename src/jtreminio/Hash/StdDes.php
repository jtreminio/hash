<?php

namespace jtreminio\Hash;

class StdDes extends Hash
{

    const ALGO_NAME = 'CRYPT_STD_DES';
    const COST_MIN = 1;
    const COST_MAX = 2;
    const COST_DEFAULT = 1;
    const PREFIX = '';
    const SALT_LENGTH = 2;

    /**
     * Hashes password using selected algo
     *
     * @param string $password Unmodified password
     * @return string
     */
    public function hash($password)
    {
        $salt = self::PREFIX.$this->generateSalt();

        return $this->validateHash(crypt($password, $salt));
    }

    /**
     * Validated a hash generated by crypt()
     *
     * @param string $hash Hashed password
     *
     * @return string
     * @throws Exception
     */
    protected function validateHash($hash)
    {
        // On failure, crypt() will either return '*0' or '*1'
        if ($hash === '*0' || $hash === '*1' || strlen($hash) < 13) {
            throw new Exception("Password hash appears to be invalid: {$hash}");
        }

        return $hash;
    }

}